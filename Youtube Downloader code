from pytube import YouTube
import numpy as np
from pprint import pprint
import sys
import os
import urllib2
import re
import time
from bs4 import BeautifulSoup
import requests
from multiprocessing import Process
import threading
from threading import Thread
from os import listdir
from os.path import isfile, join


def dedupe(items):
    seen = set()
    for item in items:
        if item not in seen:
            yield item
            seen.add(item)

def getPlaylistLinks(url):
    sTUBE = ''
    cPL = ''
    amp = 0
    final_url = []

    if 'list=' in url:
        eq = url.rfind('=') + 1
        cPL = url[eq:]

    else:
        return 'Incorrect Playlist.'

    try:
        yTUBE = urllib2.urlopen(url).read()
        sTUBE = str(yTUBE)
    except urllib2.error.URLError as e:
        print(e.reason)


    tmp_mat = re.compile(r'watch\?v=\S+?list=' + cPL)
    mat = re.findall(tmp_mat, sTUBE)

    if mat:

        for PL in mat:
            yPL = str(PL)
            if '&' in yPL:
                yPL_amp = yPL.index('&')
            final_url.append('http://www.youtube.com/' + yPL[:yPL_amp])
        i = 0
    else:
        return 'No videos found'
    return final_url

def check_exists(MainList,Checkval):
    for item in MainList:
        if Checkval in item:
            return True

def download_videos(path,playlistLink):
    files = getFilesinDir(path)
    value = getPlaylistLinks(playlistLink)
    if value != 'Incorrect Playlist.':
        youtubeLinksTobeDownloaded = list(dedupe(value))
        count = 0
        for links in youtubeLinksTobeDownloaded:



            try:
                yt = YouTube(links)
                getFiles = getFilesinDir(path)
                
                print check_exists(getFiles, yt.filename)
                
                if check_exists(getFiles, yt.filename) == False or check_exists(getFiles, yt.filename) == None:
                    
                    print links
                    video = yt.get('mp4', '360p')
                    print yt.video_id,yt.filename
                    yt.set_filename(str(count+1) + '-' + yt.filename)
                    video.download(path)
            except :
                    #print(e.reason)
                pass
                #sys.exit()
            count += 1
    else:
        print 'Downloading'
        yt = YouTube(playlistLink)
        video = yt.get('mp4', '360p')
        yt.set_filename(yt.filename)
        video.download(path)



def getFilesinDir(path):
    return os.listdir(path)

t1 = Thread(target = download_videos,args =(destination folder,youtube playlist or video link))
t2 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))
t3 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))
t4 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))
t5 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))
t6 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))
t7 = Thread(target = download_videos, args = (destination folder,youtube playlist or video link))

t1.start()
t2.start()
t3.start()
t4.start()
t5.start()
t6.start()
t7.start()
